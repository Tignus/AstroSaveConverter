event click $(#btnPrevious) {
    step.previous();
}
event click $(#btnNext) {
    step.next();
}

class Step {
    var _state = ["step_select-folder", "step_select-container", "step_rename-container", "step_verify", "step_convert"];

    property current_step(v) {
        get { return this._current_step; }
        set { this._current_step = v; }
    }

    function this() {
        current_step = 0;
        setPreviousEnable(false);
    }

    function previous() {
        current_step--;

        if(current_step == 0) {
            setPreviousEnable(false);
        }
        if(current_step < this._state.length) {
            setNextEnable(true);
        }

        updateStep();
        updateStepperPrevious(_state[current_step], _state[current_step + 1]);
    }
    function next() {
        current_step++;

        if(current_step > 0) {
            setPreviousEnable(true);
        }
        if(current_step >= this._state.length - 1) {
            setNextEnable(false);
        }

        updateStep();
        updateStepperNext(_state[current_step - 1], _state[current_step]);
    }
    function updateStepperNext(previousId, activeId) {
        $(#progress-{previousId}).attributes.addClass("completed");
        $(#progress-{previousId}).attributes.removeClass("active");
        $(#progress-{activeId}).attributes.addClass("active");
    }
    function updateStepperPrevious(activeId, nextId) {
        $(#progress-{activeId}).attributes.addClass("active");
        $(#progress-{activeId}).attributes.removeClass("completed");
        $(#progress-{nextId}).attributes.removeClass("active");
    }

    function updateStep() {
        for(var s in _state) {
            $(#{s}).attributes.addClass("d-none");
        }
        $(#{_state[current_step]}).attributes.removeClass("d-none");
    }

    function setPreviousEnable(enable) {
        $(#btnPrevious).state.disabled = !enable;
    }
    function setNextEnable(enable) {
        $(#btnNext).state.disabled = !enable;
    }
}

var step = new Step();